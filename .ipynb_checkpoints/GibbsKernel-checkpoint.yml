name: MyDijetKernelSimp
doc: You should always document your code.
stationary: false
params: [a,b,c,d]

reparams:
    bb: return b; 

value: |
    double lx1 = b*x1+c;
    double lx2 = b*x2+c;
    double coeff = 2*lx1*lx2/(lx1*lx1+lx2*lx2);
    double xbar = std::abs(x1)+std::abs(x2);
    double r = std::abs(x1-x2);
    return exp(-(xbar-d)/(2*a)) * (pow(coeff,0.5)) * exp(-r*r/(lx1*lx1+lx2*lx2));
grad:
    c: |
        double lx1 = b*x1+c;
        double lx2 = b*x2+c;
        double coeff = 2*lx1*lx2/(lx1*lx1+lx2*lx2);
        double xbar = std::abs(x1)+std::abs(x2);
        double r = std::abs(x1-x2);
        double amp = exp(-(xbar-d)/(2*a));
        double coeffpt = pow(coeff,0.5);
        double exppt = exp(-r*r/(lx1*lx1+lx2*lx2));
        double drexp = 2*r*r*(2*c+b*(x1-x2))/pow(lx1*lx1+lx2*lx2,2);
        double drcoeff =  pow(coeff, -0.5)*(b*b*(x1-x2)*(x1-x2)*(2*c+b*(x1+x2)))/pow(2*c*c+2*b*c*(x1+x2)+b*b*(x1*x1+x2*x2),2);
        return amp * (coeffpt * exppt * drexp + drcoeff * exppt);
    b: |
        double lx1 = b*x1+c;
        double lx2 = b*x2+c;
        double coeff = 2*lx1*lx2/(lx1*lx1+lx2*lx2);
        double xbar = std::abs(x1)+std::abs(x2);
        double r = std::abs(x1-x2);
        double amp = exp(-(xbar-d)/(2*a));
        double coeffpt = pow(coeff,0.5);
        double exppt = exp(-r*r/(lx1*lx1+lx2*lx2));
        double drexp = r*r*(2*c*(x1+x2)+2*b*(x1*x1+x2*x2))/pow((lx1*lx1+lx2*lx2),2);
        double drcoeff =  pow(coeff, -0.5)*(c*b*pow((x1-x2),2)*(2*c+b*(x1+x2)))/pow(2*c*c+2*b*c*(x1+x2)+b*b*(x1*x1+x2*x2),2);
        return amp * (coeffpt * exppt * drexp + drcoeff * exppt);
    a: |
        double lx1 = b*x1+c;
        double lx2 = b*x2+c;
        double coeff = 2*lx1*lx2/(lx1*lx1+lx2*lx2);
        double xbar = std::abs(x1)+std::abs(x2);
        double r = std::abs(x1-x2);
        double amp = exp(-(xbar-d)/(2*a));
        double coeffpt = pow(coeff,0.5);
        double exppt = exp(-r*r/(lx1*lx1+lx2*lx2));
        return amp * coeffpt * exppt * (xbar-d)/(2*pow(a,2));
    d: |
        double lx1 = b*x1+c;
        double lx2 = b*x2+c;
        double coeff = 2*lx1*lx2/(lx1*lx1+lx2*lx2);
        double xbar = std::abs(x1)+std::abs(x2);
        double r = std::abs(x1-x2);
        double amp = exp(-(xbar-d)/(2*a));
        double coeffpt = pow(coeff,0.5);
        double exppt = exp(-r*r/(lx1*lx1+lx2*lx2));
        return amp * coeffpt * exppt * (xbar-d)/(2*a);
